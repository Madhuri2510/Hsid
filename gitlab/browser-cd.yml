default:
  tags:
    - dc-d-aw2-large-ss
stages:
  - Test_automation
  - mail-report

  
Test_automation:
  resource_group: browser-test-automation
  stage: Test_automation
  tags:
    - Onstream_automation_shell
  script:
    - |-    
        "$CI_JOB_ID" >> prejobid; 
        git config --global user.email "rahul.r@dish.com"; 
        git config --global user.name "rahul.r2";
        git remote set-url --push origin https://oauth2:glpat-MHswy-xBwpEcRjLd74iD@gitlab.com/dish-cloud/dish-technology-and-strategy/dish-commercial-engineering/onstream-automation/onstream-automation.git;
        cd testing;
        IF ($Browser_ModuleR -ne 'null') { 
          $Browser_ModuleR_array = $Browser_ModuleR.Split(","); 
          for ($i = 0; $i -lt $Browser_ModuleR_array.length; $i ++) { 
            Write-Host $Browser_ModuleR_array[$i]; 
            $b = $Browser_ModuleR_array[$i]; 
            (Get-Content testcases/OnStreamTestCases/${b}_test.js) -replace "Feature","xFeature" | Out-File -encoding ASCII testcases/OnStreamTestCases/${b}_test.js; 
            } 
          }
        npm install;
        npx codeceptjs run-multiple --all --steps --config=./codecept.browser.conf.js --reporter mochawesome --grep '(?=.*p1)(?=.*browser)';
        node mergeJsonFiles.js;
        dir output;
        mv output ../
  artifacts:
    paths:
      - prejobid
      - output

mail-report:
  resource_group: browser-test-automation
  stage: mail-report
  image: onstream-cmp.docker.imovetv.com/automate-mail-report:latest
  dependencies:
    - Test_automation
  before_script:
    - apt-get update && apt-get install -y curl git zip jq
  script:
    - ls
    - cat prejobid
    - jobid=`cat prejobid`
    - jobidn=`echo $jobid | sed 's/\(.\{2\}\)//' | tr -d -c 0-9`
    - echo "$jobidn"
    - export report="${CI_PROJECT_URL}/-/jobs/$jobidn/artifacts/browse"
    - echo $report
    - git config --global user.email "rahul.r@dish.com"
    - git config --global user.name "rahul.r2"
    - git remote set-url --push origin https://oauth2:glpat-MHswy-xBwpEcRjLd74iD@gitlab.com/dish-cloud/dish-technology-and-strategy/dish-commercial-engineering/onstream-automation/onstream-automation.git
    - env=`grep 'url' testing/codecept.browser.conf.js | awk '{print $2}' | sed "s/'//g" | sed 's/.watchdishtv.*//g' | sed 's/https:\/\///g'`;
    - env="$(tr '[:lower:]' '[:upper:]' <<< ${env:0:1})${env:1}"
    - echo $env
    - mkdir -p mochawesome-report
    - mv output/* ./mochawesome-report/
    - mv ./mochawesome-report /app
    - export reciever=$browser_reciever
    - git clone -b test --single-branch https://oauth2:glpat-MHswy-xBwpEcRjLd74iD@gitlab.com/dish-cloud/dish-technology-and-strategy/dish-commercial-engineering/onstream-browser/onstream-ui-nextjs.git;
    - version=`jq -r .version ./onstream-ui-nextjs/package.json`
    - version="$version-Hospitality"
    - |- 
        if [[ $E2E == "TRUE" ]]; then
          export cicd="CICD PIPELINE"
        else
          export cicd="CD PIPELINE"
        fi
    - echo $version
    - cd /app
    - jq --arg browser_link $browser_analysis_link -c '.browser = $browser_link' ./email-report/reportLink.json > updatelink.json
    - mv updatelink.json ./email-report/reportLink.json && rm -rf updatelink.json
    - node sendMail.js BROWSER $version | tee $CI_PROJECT_DIR/message.txt
    - cd $CI_PROJECT_DIR
    - |-
        if grep -q -e "BROWSER" message.txt; then
          source gitlab/script.sh;
          message=`cat message.txt`;
          SendMessageToHangoutsChat "$message"; 
        fi
